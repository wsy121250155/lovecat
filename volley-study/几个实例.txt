获取String
RequestQueue requestQueue = Volley.newRequestQueue(this);
    StringRequest sRequest=new StringRequest(Request.Method.GET,CITY_CODE_URL, 
		new Listener<String>() {
			@Override
			public void onResponse(String response) {
                System.out.println(response);                                
            }}, 
		new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError arg0) {
                System.out.println("sorry,Error");
            }
        });
sRequest.setShouldCache(false);//注意Request.setShouldCache(false);控制是否缓存
requestQueue.add(sRequest);

获取JSON数据
RequestQueue requestQueue = Volley.newRequestQueue(this);
JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, CITY_CODE_URL, null,
    new Response.Listener<JSONObject>() {
        @Override
        public void onResponse(JSONObject response) {
            System.out.println("response=" + response);
            tv_1.setText(response.toString());
            if (progressDialog.isShowing()
                && progressDialog != null) {
                progressDialog.dismiss();
            }
        }}, 
	new Response.ErrorListener() {
        @Override
        public void onErrorResponse(VolleyError arg0) {
            tv_1.setText(arg0.toString());
            System.out.println("sorry,Error");
            if (progressDialog.isShowing()
                && progressDialog != null) {
                progressDialog.dismiss();
            }
        }});
requestQueue.add(jsonObjectRequest);

利用Volley异步加载图片
String imageUrl = "http://www.eoeandroid.com/static/image/common/eoe_logo.png";
RequestQueue requestQueue = Volley.newRequestQueue(this);
final LruCache<String, Bitmap> lruCache = new LruCache<String, Bitmap>(20);
ImageCache imageCache = new ImageCache() {
    @Override
    public void putBitmap(String key, Bitmap value) {
        lruCache.put(key, value);
    }
    @Override
    public Bitmap getBitmap(String key) {
        return lruCache.get(key);
    }
};
ImageLoader imageLoader = new ImageLoader(requestQueue, imageCache);
ImageListener listener = ImageLoader.getImageListener(iv_1,R.drawable.ic_launcher, R.drawable.ic_launcher);
imageLoader.get(imageUrl, listener);

由队列获取网络图片
String imageUrl1 = "http://avatar.csdn.net/6/6/D/1_lfdfhl.jpg";
String imageUrl2 = "http://t12.baidu.com/it/u=3581266748,3370024907&fm=58";
String imageUrl3 = "http://t2.baidu.com/it/u=2746688282,2286805359&fm=21&gp=0.jpg";
String imageUrl4 = "http://t10.baidu.com/it/u=2344869391,1964162964&fm=21&gp=0.jpg";
String imageUrl5 = "http://t12.baidu.com/it/u=2783524012,4149039143&fm=23&gp=0.jpg";
RequestQueue requestQueue = Volley.newRequestQueue(this);
final LruCache<String, Bitmap> lruCache = new LruCache<String, Bitmap>(20);
ImageCache imageCache = new ImageCache() {
    @Override
    public void putBitmap(String key, Bitmap value) {
        lruCache.put(key, value);
    }
    @Override
    public Bitmap getBitmap(String key) {
        return lruCache.get(key);
    }
};
ImageLoader imageLoader = new ImageLoader(requestQueue, imageCache);
iv_netiv1.setTag("url_1");
iv_netiv2.setTag("url_2");
iv_netiv3.setTag("url_3");
iv_netiv4.setTag("url_4");
iv_netiv5.setTag("url_5");
iv_netiv1.setImageUrl(imageUrl1, imageLoader);
iv_netiv2.setImageUrl(imageUrl2, imageLoader);
iv_netiv3.setImageUrl(imageUrl3, imageLoader);
iv_netiv4.setImageUrl(imageUrl4, imageLoader);
iv_netiv5.setImageUrl(imageUrl5, imageLoader);
